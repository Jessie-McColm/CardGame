#BlueJ class context
comment0.target=testPack
comment0.text=\n\ The\ test\ class\ testNonexistantPackFile.\n\n\ @author\ \ (your\ name)\n\ @version\ (a\ version\ number\ or\ a\ date)\n
comment1.params=
comment1.target=testPack()
comment1.text=\n\ Default\ constructor\ for\ test\ class\ testPack\n
comment10.params=
comment10.target=void\ testInvalidCharPack()
comment10.text=\n\ Tests\ that\ a\ invalid\ pack\ file\ (contains\ invalid\ character(non\ integers))\ is\ marked\ as\ invalid\ by\ the\ checkFileValidity\ method\n\n
comment11.params=
comment11.target=void\ testZeroPack()
comment11.text=\n\ Tests\ that\ a\ valid\ pack\ file\ that\ contains\ 0s\ is\ marked\ as\ valid\ by\ the\ checkFileValidity\ method\n\n
comment12.params=
comment12.target=void\ testNegativePack()
comment12.text=\n\ Tests\ that\ a\ invalid\ pack\ file\ (contains\ negative\ integers)\ is\ marked\ as\ invalid\ by\ the\ checkFileValidity\ method\n\n
comment13.params=
comment13.target=void\ testEmptyPack()
comment13.text=\n\ Tests\ that\ a\ invalid\ pack\ file\ (is\ empty)\ is\ marked\ as\ invalid\ by\ the\ checkFileValidity\ method\n\n
comment14.params=
comment14.target=void\ testNonexistantPackFile()
comment14.text=\n\ Tests\ that\ a\ nonexistant\ pack\ file\ \ is\ marked\ as\ invalid\ by\ the\ checkFileValidity\ method\n\n
comment15.params=
comment15.target=void\ tearDown()
comment15.text=\n\ Tears\ down\ the\ test\ fixture.\n\n\ Called\ after\ every\ test\ case\ method.\n
comment2.params=
comment2.target=void\ setUp()
comment2.text=\n\ Sets\ up\ the\ test\ fixture.\n\n\ Called\ before\ every\ test\ case\ method.\n
comment3.params=
comment3.target=void\ readValidPackTest()
comment3.text=\n\ Tests\ that\ when\ a\ valid\ pack\ file\ is\ read\ in,\ the\ correct\ values\ are\ used\ to\ make\ cards\ and\ construct\ the\ card\ list\ in\ the\ correct\ order\ with\ the\ncorrect\ values\n
comment4.params=
comment4.target=void\ testReadInvalidPack()
comment4.text=\n\ Tests\ that\ when\ a\ invalid\ pack\ file\ is\ read\ in,\ the\ cardList\ is\ not\ constucted\ (is\ empty)\n\n
comment5.params=
comment5.target=void\ validPackTest()
comment5.text=\n\ Tests\ that\ a\ valid\ pack\ file\ (i.e.\ is\ the\ correct\ length\ and\ only\ contains\ positive\ integers)\ is\ marked\ as\ valid\ by\ the\ checkFileValidity\ method\n\n
comment6.params=
comment6.target=void\ longerValidPackTest()
comment6.text=\n\ Tests\ that\ a\ longer\ valid\ pack\ file\ (i.e.\ is\ the\ correct\ length\ and\ only\ contains\ positive\ integers)\ is\ marked\ as\ valid\ by\ the\n\ checkFileValidity\ method.\ This\ pack\ file\ is\ for\ 3\ players\ instead\ of\ 2\n\n
comment7.params=
comment7.target=void\ longestValidPackTest()
comment7.text=\n\ Tests\ that\ a\ longer\ valid\ pack\ file\ (i.e.\ is\ the\ correct\ length\ and\ only\ contains\ positive\ integers)\ is\ marked\ as\ valid\ by\ the\n\ checkFileValidity\ method.\ This\ pack\ file\ is\ for\ 100\ players\ instead\ of\ 2\n\n
comment8.params=
comment8.target=void\ testShortPack()
comment8.text=\n\ Tests\ that\ a\ invalid\ pack\ file\ (is\ too\ short\ for\ 2\ players)\ is\ marked\ as\ invalid\ by\ the\ checkFileValidity\ method\n\n
comment9.params=
comment9.target=void\ testLongPack()
comment9.text=\n\ Tests\ that\ a\ invalid\ pack\ file\ (is\ too\ long\ for\ 2\ players)\ is\ marked\ as\ invalid\ by\ the\ checkFileValidity\ method\n\n
numComments=16
